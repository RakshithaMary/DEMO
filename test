def get_node_properties(self, node_id: str) -> dict | None:
    """
    Fetches all properties for a single node given its element ID.
    If node is Product or Prospect, also fetch chain context (BMO_Client, Competitor).
    """
    try:
        with self.driver.session() as session:
            # First fetch the node and labels
            query = "MATCH (n) WHERE elementId(n) = $node_id RETURN n, labels(n) AS labels"
            params = {"node_id": node_id}
            record = session.run(query, params).single()

            if not record:
                return None

            node = dict(record["n"].items())
            labels = record["labels"]

            # If Product, also get BMO_Client + Competitor
            if "Product" in labels:
                query = """
                MATCH (b:BMO_Client)-[:HAS_COMPETITOR]->(c:Competitor)-[:OFFERS]->(p:Product)
                WHERE elementId(p) = $node_id
                RETURN b.party_name AS bmo_client, c.fi_name_std AS competitor
                """
                ctx = session.run(query, params).single()
                if ctx:
                    node["bmo_client"] = ctx["bmo_client"]
                    node["competitor"] = ctx["competitor"]

            # If Prospect, also get Product + Competitor + BMO_Client
            if "Prospect" in labels:
                query = """
                MATCH (b:BMO_Client)-[:HAS_COMPETITOR]->(c:Competitor)-[:OFFERS]->(p:Product)-[:USED_BY]->(pr:Prospect)
                WHERE elementId(pr) = $node_id
                RETURN b.party_name AS bmo_client, c.fi_name_std AS competitor, p.payment_product_name AS product
                """
                ctx = session.run(query, params).single()
                if ctx:
                    node["bmo_client"] = ctx["bmo_client"]
                    node["competitor"] = ctx["competitor"]
                    node["product"] = ctx["product"]

            return node

    except Exception as e:
        logger.error(f"An exception occurred fetching properties for node {node_id}", exc_info=True)
        return None


